---
import '../styles/global.css'
interface Props {
	title: string
	center?: boolean
	className?: string
}

const { title, center = false, className } = Astro.props
---

<!doctype html>
<html lang="en" data-theme="light">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="1li.tw URL Shortener" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/png" href="/favicon.png" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
	</head>
	<body>
		<div class="drawer">
			<input id="my-drawer" type="checkbox" class="drawer-toggle" />
			<div class="drawer-content h-screen flex flex-col">
				<!-- Navbar -->
				<div class="navbar bg-base-100 shadow-sm">
					<div class="flex-none sm:hidden">
						<label for="my-drawer" aria-label="open sidebar" class="btn btn-square btn-ghost">
							<svg
								xmlns="http://www.w3.org/2000/svg"
								class="inline-block h-6 w-6"
								fill="none"
								viewBox="0 0 24 24"
								stroke="currentColor"
							>
								<path
									stroke-linecap="round"
									stroke-linejoin="round"
									stroke-width="2"
									d="M4 6h16M4 12h16M4 18h16"></path>
							</svg>
						</label>
					</div>
					<div class="flex-1">
						<a href="/" class="btn btn-ghost text-xl">1li.tw</a>
					</div>
					<div class="flex-none hidden sm:block" id="nav-menu">
						<ul class="menu menu-horizontal px-1 gap-2">
							<li><a class="btn btn-ghost" href="/login">Login</a></li>
							<li><a class="btn btn-ghost" href="/register">Register</a></li>
						</ul>
					</div>
				</div>

				<!-- Page content here -->
				<main
					class:list={[
						'container mx-auto p-4',
						{ 'flex flex-col items-center justify-center': center },
						className,
					]}
				>
					<slot />
				</main>

				<footer class="footer footer-center p-4 bg-base-300 text-base-content">
					<aside>
						<p>Copyright Â© 2025 - All right reserved by 1li.tw</p>
					</aside>
				</footer>
			</div>
			<div class="drawer-side">
				<label for="my-drawer" aria-label="close sidebar" class="drawer-overlay"></label>
				<div id="nav-menu-mobile" class="h-full">
					<ul class="menu p-4 w-80 min-h-full bg-base-200">
						<li><a class="btn btn-ghost justify-start" href="/">Home</a></li>
						<li><a class="btn btn-ghost justify-start" href="/login">Login</a></li>
						<li><a class="btn btn-ghost justify-start" href="/register">Register</a></li>
					</ul>
				</div>
			</div>
		</div>
		<script>
			import { API_URL, logout } from '../lib/api'
			import { canManageUsers } from '../lib/permissions'
			document.addEventListener('DOMContentLoaded', () => {
				const userStr = localStorage.getItem('user')
				const navMenu = document.getElementById('nav-menu')!
				const navMenuMobile = document.getElementById('nav-menu-mobile')!

				if (userStr) {
					try {
						const user = JSON.parse(userStr)
						if (user && user.username) {
							let adminLink = ''
							if (canManageUsers(user.permissions)) {
								adminLink =
									'<li><a class="btn btn-ghost justify-start" href="/admin/user">User Management</a></li>'
							}

							navMenu.innerHTML = `
                                <ul class="menu menu-horizontal px-1 gap-2">
                                    <li><a class="btn btn-ghost" href="/dashboard">Dashboard</a></li>
									${adminLink}
                                    <li><button class="btn btn-ghost logout-btn">Logout</button></li>
                                </ul>
                            `
							navMenuMobile.innerHTML = `
								<ul class="menu p-4 w-80 min-h-full bg-base-200">
									<li><a class="btn btn-ghost justify-start" href="/">Home</a></li>
									<li><a class="btn btn-ghost justify-start" href="/dashboard">Dashboard</a></li>
									${adminLink}
									<li><button class="btn btn-ghost logout-btn justify-start">Logout</button></li>
								</ul>
							`
							document.querySelectorAll('.logout-btn').forEach(button => {
								button.addEventListener('click', async () => {
									await logout()

									localStorage.removeItem('user')
									// Also need to call a backend endpoint to invalidate the cookie if possible
									window.location.href = '/'
								})
							})
						}
					} catch (e) {
						console.error('Failed to parse user from localStorage', e)
						// localStorage.removeItem('user')
					}
				}
			})

			fetch(`${API_URL()}/me`, {
				credentials: 'include',
			})
				.then(res => res.json())
				.then(user => {
					console.log(user)
					localStorage.setItem(
						'user',
						JSON.stringify({
							username: user.Username,
							permissions: user.Permissions,
						}),
					)
				})
		</script>
	</body>
</html>
<style is:global>
	:root {
		--font-family-sans-serif: 'Inter', sans-serif;
	}
	body {
		font-family: var(--font-family-sans-serif);
		min-height: 100vh;
		display: flex;
		flex-direction: column;
	}
	main {
		flex-grow: 1;
	}
</style>
